% Lab 10

allImages = imageDatastore('TrainingData', 'IncludeSubfolders', true,...
    'LabelSource', 'foldernames');

[trainingImages, testImages] = splitEachLabel(allImages, 0.8, 'randomize');
  
alex = alexnet; 
layers = alex.Layers; 
layers(23) = fullyConnectedLayer(4); % change this based on # of classes
layers(25) = classificationLayer;
testImages.ReadFcn = @readFunctionTrain;

%% myNet1
opts1 = trainingOptions('sgdm', ...
'MiniBatchSize',10, ...
'MaxEpochs',3, ...
'InitialLearnRate',1e-4, ...
'Shuffle','every-epoch', ...
'ValidationData', testImages, ...
'ValidationFrequency',3, ...
'Verbose',false, ...
'Plots','training-progress'); 
trainingImages.ReadFcn = @readFunctionTrain;
myNet1 = trainNetwork(trainingImages, layers, opts1);
predictedLabels = classify(myNet1, testImages); 
accuracy = mean(predictedLabels == testImages.Labels)
figure, confusionchart(predictedLabels, testImages.Labels) 
%% myNet2
opts2 = trainingOptions('sgdm', ...
'MiniBatchSize',10, ...
'MaxEpochs',5, ...
'InitialLearnRate',1e-4, ...
'Shuffle','every-epoch', ...
'ValidationData', testImages, ...
'ValidationFrequency',3, ...
'Verbose',false, ...
'Plots','training-progress'); 
trainingImages.ReadFcn = @readFunctionTrain;
myNet2 = trainNetwork(trainingImages, layers, opts2);
predictedLabels = classify(myNet2, testImages); 
accuracy = mean(predictedLabels == testImages.Labels)
figure, confusionchart(predictedLabels, testImages.Labels)
%% myNet3
opts3 = trainingOptions('sgdm', ...
'MiniBatchSize',10, ...
'MaxEpochs',10, ...
'InitialLearnRate',1e-4, ...
'Shuffle','every-epoch', ...
'ValidationData', testImages, ...
'ValidationFrequency',3, ...
'Verbose',false, ...
'Plots','training-progress'); 
trainingImages.ReadFcn = @readFunctionTrain;
myNet3 = trainNetwork(trainingImages, layers, opts3);
predictedLabels = classify(myNet3, testImages); 
accuracy = mean(predictedLabels == testImages.Labels)
figure, confusionchart(predictedLabels, testImages.Labels)